var data = {lines:[
{"lineNum":"    1","line":"# Copyright 2019-2022 Afr Schoe @q9f"},
{"lineNum":"    2","line":"#"},
{"lineNum":"    3","line":"# Licensed under the Apache License, Version 2.0 (the \"License\");"},
{"lineNum":"    4","line":"# you may not use this file except in compliance with the License."},
{"lineNum":"    5","line":"# You may obtain a copy of the License at"},
{"lineNum":"    6","line":"#"},
{"lineNum":"    7","line":"#     http://www.apache.org/licenses/LICENSE-2.0"},
{"lineNum":"    8","line":"#"},
{"lineNum":"    9","line":"# Unless required by applicable law or agreed to in writing, software"},
{"lineNum":"   10","line":"# distributed under the License is distributed on an \"AS IS\" BASIS,"},
{"lineNum":"   11","line":"# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."},
{"lineNum":"   12","line":"# See the License for the specific language governing permissions and"},
{"lineNum":"   13","line":"# limitations under the License."},
{"lineNum":"   14","line":""},
{"lineNum":"   15","line":"# Provides a `Secp256k1` keypair containing a secret number (private key)"},
{"lineNum":"   16","line":"# and a public point on the elliptic curve (public key)."},
{"lineNum":"   17","line":"#"},
{"lineNum":"   18","line":"# Properties:"},
{"lineNum":"   19","line":"# * `private_key` (`Num`): the secret number representing the private key."},
{"lineNum":"   20","line":"# * `public_key` (`Point`): the point on the elliptic curve representing the public key."},
{"lineNum":"   21","line":"class Secp256k1::Key"},
{"lineNum":"   22","line":"  # The secret number representing the private key."},
{"lineNum":"   23","line":"  property private_key : Num"},
{"lineNum":"   24","line":"  # The point on the elliptic curve representing the public key."},
{"lineNum":"   25","line":"  property public_key : Point"},
{"lineNum":"   26","line":""},
{"lineNum":"   27","line":"  # Creates a new, random `Secp256k1` keypair."},
{"lineNum":"   28","line":"  #"},
{"lineNum":"   29","line":"  # ```"},
{"lineNum":"   30","line":"  # Key.new"},
{"lineNum":"   31","line":"  # # => #<Secp256k1::Key:0x7fad7235aee0"},
{"lineNum":"   32","line":"  # #          @private_key=#<Secp256k1::Num:0x7fad7235d300"},
{"lineNum":"   33","line":"  # #              @hex=\"3ccf84820c20d5e8c536ba84c52ba410375b29b1812b5f7e722445c969a0fb30\","},
{"lineNum":"   34","line":"  # #              @dec=27505422793993207218034260454067205887515304192802142316084292370834437241648,"},
{"lineNum":"   35","line":"  # #              @bin=Bytes[60, 207, 132, 130, 12, 32, 213, 232, 197, 54, 186, 132, 197, 43, 164, 16, 55, 91, 41, 177, 129, 43, 95, 126, 114, 36, 69, 201, 105, 160, 251, 48]>,"},
{"lineNum":"   36","line":"  # #          @public_key=#<Secp256k1::Point:0x7fad7235ad20"},
{"lineNum":"   37","line":"  # #              @x=#<Secp256k1::Num:0x7fad69294ec0"},
{"lineNum":"   38","line":"  # #                  @hex=\"cd4a8712ee6efc15b5abe37c0dbfa979d89c427d3fe24b076008decefe94dba2\","},
{"lineNum":"   39","line":"  # #                  @dec=92855812888509048668847240903552964511053624688683992093822247249407942908834,"},
{"lineNum":"   40","line":"  # #                  @bin=Bytes[205, 74, 135, 18, 238, 110, 252, 21, 181, 171, 227, 124, 13, 191, 169, 121, 216, 156, 66, 125, 63, 226, 75, 7, 96, 8, 222, 206, 254, 148, 219, 162]>,"},
{"lineNum":"   41","line":"  # #              @y=#<Secp256k1::Num:0x7fad69294e80"},
{"lineNum":"   42","line":"  # #                  @hex=\"81363d298e4a40ebcb13f1afa85a0b94b967f243ee59a59010cb5deaf0d7b66c\","},
{"lineNum":"   43","line":"  # #                  @dec=58444189335609256006902338825877424261513225250255958585656342678587884156524,"},
{"lineNum":"   44","line":"  # #                  @bin=Bytes[129, 54, 61, 41, 142, 74, 64, 235, 203, 19, 241, 175, 168, 90, 11, 148, 185, 103, 242, 67, 238, 89, 165, 144, 16, 203, 93, 234, 240, 215, 182, 108]>>>"},
{"lineNum":"   45","line":"  # ```"},
{"lineNum":"   46","line":"  def initialize","class":"lineCov","hits":"3","order":"167","possible_hits":"3",},
{"lineNum":"   47","line":"    @private_key = Num.new","class":"lineCov","hits":"1","order":"168","possible_hits":"1",},
{"lineNum":"   48","line":"    @public_key = Point.new @private_key","class":"lineCov","hits":"1","order":"178","possible_hits":"1",},
{"lineNum":"   49","line":"  end"},
{"lineNum":"   50","line":""},
{"lineNum":"   51","line":"  # Creates a public-private keypair from an existing private key."},
{"lineNum":"   52","line":"  #"},
{"lineNum":"   53","line":"  # Parameters:"},
{"lineNum":"   54","line":"  # * `priv` (`Num`): the private key for the keypair."},
{"lineNum":"   55","line":"  #"},
{"lineNum":"   56","line":"  # ```"},
{"lineNum":"   57","line":"  # priv = Num.new \"3ccf84820c20d5e8c536ba84c52ba410375b29b1812b5f7e722445c969a0fb30\""},
{"lineNum":"   58","line":"  # Key.new priv"},
{"lineNum":"   59","line":"  # # => #<Secp256k1::Key:0x7fc6b2f54ee0"},
{"lineNum":"   60","line":"  # #          @private_key=#<Secp256k1::Num:0x7fad7235d300"},
{"lineNum":"   61","line":"  # #              @hex=\"3ccf84820c20d5e8c536ba84c52ba410375b29b1812b5f7e722445c969a0fb30\","},
{"lineNum":"   62","line":"  # #              @dec=27505422793993207218034260454067205887515304192802142316084292370834437241648,"},
{"lineNum":"   63","line":"  # #              @bin=Bytes[60, 207, 132, 130, 12, 32, 213, 232, 197, 54, 186, 132, 197, 43, 164, 16, 55, 91, 41, 177, 129, 43, 95, 126, 114, 36, 69, 201, 105, 160, 251, 48]>,"},
{"lineNum":"   64","line":"  # #          @public_key=#<Secp256k1::Point:0x7fad7235ad20"},
{"lineNum":"   65","line":"  # #              @x=#<Secp256k1::Num:0x7fad69294ec0"},
{"lineNum":"   66","line":"  # #                  @hex=\"cd4a8712ee6efc15b5abe37c0dbfa979d89c427d3fe24b076008decefe94dba2\","},
{"lineNum":"   67","line":"  # #                  @dec=92855812888509048668847240903552964511053624688683992093822247249407942908834,"},
{"lineNum":"   68","line":"  # #                  @bin=Bytes[205, 74, 135, 18, 238, 110, 252, 21, 181, 171, 227, 124, 13, 191, 169, 121, 216, 156, 66, 125, 63, 226, 75, 7, 96, 8, 222, 206, 254, 148, 219, 162]>,"},
{"lineNum":"   69","line":"  # #              @y=#<Secp256k1::Num:0x7fad69294e80"},
{"lineNum":"   70","line":"  # #                  @hex=\"81363d298e4a40ebcb13f1afa85a0b94b967f243ee59a59010cb5deaf0d7b66c\","},
{"lineNum":"   71","line":"  # #                  @dec=58444189335609256006902338825877424261513225250255958585656342678587884156524,"},
{"lineNum":"   72","line":"  # #                  @bin=Bytes[129, 54, 61, 41, 142, 74, 64, 235, 203, 19, 241, 175, 168, 90, 11, 148, 185, 103, 242, 67, 238, 89, 165, 144, 16, 203, 93, 234, 240, 215, 182, 108]>>>"},
{"lineNum":"   73","line":"  # ```"},
{"lineNum":"   74","line":"  def initialize(priv : Num)","class":"lineCov","hits":"3","order":"32","possible_hits":"3",},
{"lineNum":"   75","line":"    @private_key = priv","class":"lineCov","hits":"1","order":"33","possible_hits":"1",},
{"lineNum":"   76","line":"    @public_key = Point.new @private_key","class":"lineCov","hits":"1","order":"34","possible_hits":"1",},
{"lineNum":"   77","line":"  end"},
{"lineNum":"   78","line":""},
{"lineNum":"   79","line":"  # Returns the private key as hexadecimal string literal."},
{"lineNum":"   80","line":"  #"},
{"lineNum":"   81","line":"  # ```"},
{"lineNum":"   82","line":"  # Key.new(Num.new \"3ccf84820c20d5e8c536ba84c52ba410375b29b1812b5f7e722445c969a0fb30\").private_hex"},
{"lineNum":"   83","line":"  # # => \"3ccf84820c20d5e8c536ba84c52ba410375b29b1812b5f7e722445c969a0fb30\""},
{"lineNum":"   84","line":"  # ```"},
{"lineNum":"   85","line":"  def private_hex : String","class":"lineCov","hits":"2","order":"179","possible_hits":"2",},
{"lineNum":"   86","line":"    @private_key.to_zpadded_hex","class":"lineCov","hits":"1","order":"180","possible_hits":"1",},
{"lineNum":"   87","line":"  end"},
{"lineNum":"   88","line":""},
{"lineNum":"   89","line":"  # Returns the private key as binary byte slice."},
{"lineNum":"   90","line":"  #"},
{"lineNum":"   91","line":"  # ```"},
{"lineNum":"   92","line":"  # Key.new(Num.new \"3ccf84820c20d5e8c536ba84c52ba410375b29b1812b5f7e722445c969a0fb30\").private_bytes"},
{"lineNum":"   93","line":"  # # => Bytes[60, 207, 132, 130, 12, 32, 213, 232, 197, 54, 186, 132, 197, 43, 164, 16, 55, 91, 41, 177, 129, 43, 95, 126, 114, 36, 69, 201, 105, 160, 251, 48]"},
{"lineNum":"   94","line":"  # ```"},
{"lineNum":"   95","line":"  def private_bytes : Bytes","class":"lineCov","hits":"2","order":"181","possible_hits":"2",},
{"lineNum":"   96","line":"    @private_key.to_zpadded_bytes","class":"lineCov","hits":"1","order":"182","possible_hits":"1",},
{"lineNum":"   97","line":"  end"},
{"lineNum":"   98","line":""},
{"lineNum":"   99","line":"  # Returns the public key as uncompressed, hexadecimal string literal."},
{"lineNum":"  100","line":"  #"},
{"lineNum":"  101","line":"  # ```"},
{"lineNum":"  102","line":"  # Key.new(Num.new \"3ccf84820c20d5e8c536ba84c52ba410375b29b1812b5f7e722445c969a0fb30\").public_hex"},
{"lineNum":"  103","line":"  # # => \"04cd4a8712ee6efc15b5abe37c0dbfa979d89c427d3fe24b076008decefe94dba281363d298e4a40ebcb13f1afa85a0b94b967f243ee59a59010cb5deaf0d7b66c\""},
{"lineNum":"  104","line":"  # ```"},
{"lineNum":"  105","line":"  def public_hex : String","class":"lineCov","hits":"2","order":"186","possible_hits":"2",},
{"lineNum":"  106","line":"    @public_key.uncompressed","class":"lineCov","hits":"1","order":"187","possible_hits":"1",},
{"lineNum":"  107","line":"  end"},
{"lineNum":"  108","line":""},
{"lineNum":"  109","line":"  # Returns the public key as compressed, hexadecimal string literal."},
{"lineNum":"  110","line":"  #"},
{"lineNum":"  111","line":"  # ```"},
{"lineNum":"  112","line":"  # Key.new(Num.new \"3ccf84820c20d5e8c536ba84c52ba410375b29b1812b5f7e722445c969a0fb30\").public_hex_compressed"},
{"lineNum":"  113","line":"  # # => \"02cd4a8712ee6efc15b5abe37c0dbfa979d89c427d3fe24b076008decefe94dba2\""},
{"lineNum":"  114","line":"  # ```"},
{"lineNum":"  115","line":"  def public_hex_compressed : String"},
{"lineNum":"  116","line":"    @public_key.compressed"},
{"lineNum":"  117","line":"  end"},
{"lineNum":"  118","line":""},
{"lineNum":"  119","line":"  # Returns the public key as uncompressed, binary byte slice."},
{"lineNum":"  120","line":"  #"},
{"lineNum":"  121","line":"  # ```"},
{"lineNum":"  122","line":"  # Key.new(Num.new \"3ccf84820c20d5e8c536ba84c52ba410375b29b1812b5f7e722445c969a0fb30\").public_bytes"},
{"lineNum":"  123","line":"  # # => Bytes[4, 205, 74, 135, 18, 238, 110, 252, 21, 181, 171, 227, 124, 13, 191, 169, 121, 216, 156, 66, 125, 63, 226, 75, 7, 96, 8, 222, 206, 254, 148, 219, 162, 129, 54, 61, 41, 142, 74, 64, 235, 203, 19, 241, 175, 168, 90, 11, 148, 185, 103, 242, 67, 238, 89, 165, 144, 16, 203, 93, 234, 240, 215, 182, 108]"},
{"lineNum":"  124","line":"  # ```"},
{"lineNum":"  125","line":"  def public_bytes : Bytes","class":"lineCov","hits":"2","order":"188","possible_hits":"2",},
{"lineNum":"  126","line":"    Num.new(@public_key.uncompressed).to_bytes","class":"lineCov","hits":"1","order":"189","possible_hits":"1",},
{"lineNum":"  127","line":"  end"},
{"lineNum":"  128","line":""},
{"lineNum":"  129","line":"  # Returns the public key as compressed, binary byte slice."},
{"lineNum":"  130","line":"  #"},
{"lineNum":"  131","line":"  # ```"},
{"lineNum":"  132","line":"  # Key.new(Num.new \"3ccf84820c20d5e8c536ba84c52ba410375b29b1812b5f7e722445c969a0fb30\").public_bytes_compressed"},
{"lineNum":"  133","line":"  # # => Bytes[2, 205, 74, 135, 18, 238, 110, 252, 21, 181, 171, 227, 124, 13, 191, 169, 121, 216, 156, 66, 125, 63, 226, 75, 7, 96, 8, 222, 206, 254, 148, 219, 162]"},
{"lineNum":"  134","line":"  # ```"},
{"lineNum":"  135","line":"  def public_bytes_compressed : Bytes"},
{"lineNum":"  136","line":"    Num.new(@public_key.compressed).to_bytes"},
{"lineNum":"  137","line":"  end"},
{"lineNum":"  138","line":"end"},
]};
var percent_low = 25;var percent_high = 75;
var header = { "command" : "run_coverage", "date" : "2022-04-06 12:16:54", "instrumented" : 14, "covered" : 14,};
var merged_data = [];
