var data = {lines:[
{"lineNum":"    1","line":"# Copyright 2019-2022 Afr Schoe @q9f"},
{"lineNum":"    2","line":"#"},
{"lineNum":"    3","line":"# Licensed under the Apache License, Version 2.0 (the \"License\");"},
{"lineNum":"    4","line":"# you may not use this file except in compliance with the License."},
{"lineNum":"    5","line":"# You may obtain a copy of the License at"},
{"lineNum":"    6","line":"#"},
{"lineNum":"    7","line":"#     http://www.apache.org/licenses/LICENSE-2.0"},
{"lineNum":"    8","line":"#"},
{"lineNum":"    9","line":"# Unless required by applicable law or agreed to in writing, software"},
{"lineNum":"   10","line":"# distributed under the License is distributed on an \"AS IS\" BASIS,"},
{"lineNum":"   11","line":"# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."},
{"lineNum":"   12","line":"# See the License for the specific language governing permissions and"},
{"lineNum":"   13","line":"# limitations under the License."},
{"lineNum":"   14","line":""},
{"lineNum":"   15","line":"# Provides an ECDSA Signature containing the random point `r`, the"},
{"lineNum":"   16","line":"# signature proof `s`, and the recovery id or `v` value."},
{"lineNum":"   17","line":"#"},
{"lineNum":"   18","line":"# Properties:"},
{"lineNum":"   19","line":"# * `r` (`Num`): the `x` coordinate of a random point `R` on the curve."},
{"lineNum":"   20","line":"# * `s` (`Num`): the signature proof of a message."},
{"lineNum":"   21","line":"# * `v` (`Num`): the recovery id or `v` value."},
{"lineNum":"   22","line":"class Secp256k1::Signature"},
{"lineNum":"   23","line":"  # The `x` coordinate of a random point `R` on the curve."},
{"lineNum":"   24","line":"  getter r : Num"},
{"lineNum":"   25","line":""},
{"lineNum":"   26","line":"  # The signature proof of a message."},
{"lineNum":"   27","line":"  getter s : Num"},
{"lineNum":"   28","line":""},
{"lineNum":"   29","line":"  # The recovery id or `v` value."},
{"lineNum":"   30","line":"  getter v : Num"},
{"lineNum":"   31","line":""},
{"lineNum":"   32","line":"  # Provides an ECDSA Signature containing the random point `r`, the"},
{"lineNum":"   33","line":"  # signature proof `s`, and the recovery id or `v` value."},
{"lineNum":"   34","line":"  #"},
{"lineNum":"   35","line":"  # Parameters:"},
{"lineNum":"   36","line":"  # * `r` (`Num`): the `x` coordinate of a random point `R` on the curve."},
{"lineNum":"   37","line":"  # * `s` (`Num`): the signature proof of a message."},
{"lineNum":"   38","line":"  # * `v` (`Num`): the recovery id or `v` value."},
{"lineNum":"   39","line":"  #"},
{"lineNum":"   40","line":"  # ```"},
{"lineNum":"   41","line":"  # r = Num.new \"efc4f8d8bfc778463e4d4916d88bf3f057e6dc96cb2adc26dfb91959c4bef4a5\""},
{"lineNum":"   42","line":"  # s = Num.new \"cecd9a83fefafcb3cf99fde0c340bbe2fed9cdd0d25b53f4e08254acefb69ae0\""},
{"lineNum":"   43","line":"  # v = Num.new \"00\""},
{"lineNum":"   44","line":"  # Signature.new r, s, v"},
{"lineNum":"   45","line":"  # # => #<Secp256k1::Signature:0x7f67a3f97e40"},
{"lineNum":"   46","line":"  # #          @r=#<Secp256k1::Num:0x7f67a3f91480"},
{"lineNum":"   47","line":"  # #              @hex=\"efc4f8d8bfc778463e4d4916d88bf3f057e6dc96cb2adc26dfb91959c4bef4a5\","},
{"lineNum":"   48","line":"  # #              @dec=108450790312736419148091503336190989867379581793003243037811027177541631669413,"},
{"lineNum":"   49","line":"  # #              @bin=Bytes[239, 196, 248, 216, 191, 199, 120, 70, 62, 77, 73, 22, 216, 139, 243, 240, 87, 230, 220, 150, 203, 42, 220, 38, 223, 185, 25, 89, 196, 190, 244, 165]>,"},
{"lineNum":"   50","line":"  # #          @s=#<Secp256k1::Num:0x7f67a3f913c0"},
{"lineNum":"   51","line":"  # #              @hex=\"cecd9a83fefafcb3cf99fde0c340bbe2fed9cdd0d25b53f4e08254acefb69ae0\","},
{"lineNum":"   52","line":"  # #              @dec=93539716883975436131751270446270238300906572229893209404647676230869395610336,"},
{"lineNum":"   53","line":"  # #              @bin=Bytes[206, 205, 154, 131, 254, 250, 252, 179, 207, 153, 253, 224, 195, 64, 187, 226, 254, 217, 205, 208, 210, 91, 83, 244, 224, 130, 84, 172, 239, 182, 154, 224]>,"},
{"lineNum":"   54","line":"  # #          @v=#<Secp256k1::Num:0x7f67a3f91380"},
{"lineNum":"   55","line":"  # #              @hex=\"00\","},
{"lineNum":"   56","line":"  # #              @dec=0,"},
{"lineNum":"   57","line":"  # #              @bin=Bytes[0]>>"},
{"lineNum":"   58","line":"  # ```"},
{"lineNum":"   59","line":"  def initialize(r : Num, s : Num, v : Num)","class":"lineCov","hits":"3","order":"231","possible_hits":"3",},
{"lineNum":"   60","line":"    @r = r","class":"lineCov","hits":"1","order":"232","possible_hits":"1",},
{"lineNum":"   61","line":"    @s = s","class":"lineCov","hits":"1","order":"233","possible_hits":"1",},
{"lineNum":"   62","line":"    @v = v","class":"lineCov","hits":"1","order":"234","possible_hits":"1",},
{"lineNum":"   63","line":"  end"},
{"lineNum":"   64","line":""},
{"lineNum":"   65","line":"  # Returns a compact `String` containing the concatenated signature"},
{"lineNum":"   66","line":"  # in the form `r|s|v`."},
{"lineNum":"   67","line":"  #"},
{"lineNum":"   68","line":"  # ```"},
{"lineNum":"   69","line":"  # r = Num.new \"efc4f8d8bfc778463e4d4916d88bf3f057e6dc96cb2adc26dfb91959c4bef4a5\""},
{"lineNum":"   70","line":"  # s = Num.new \"cecd9a83fefafcb3cf99fde0c340bbe2fed9cdd0d25b53f4e08254acefb69ae0\""},
{"lineNum":"   71","line":"  # v = Num.new \"00\""},
{"lineNum":"   72","line":"  # Signature.new(r, s, v).compact"},
{"lineNum":"   73","line":"  # # => \"efc4f8d8bfc778463e4d4916d88bf3f057e6dc96cb2adc26dfb91959c4bef4a5cecd9a83fefafcb3cf99fde0c340bbe2fed9cdd0d25b53f4e08254acefb69ae000\""},
{"lineNum":"   74","line":"  # ```"},
{"lineNum":"   75","line":"  def compact : String","class":"lineCov","hits":"2","order":"241","possible_hits":"2",},
{"lineNum":"   76","line":"    \"#{r.to_zpadded_hex}#{s.to_zpadded_hex}#{v.to_hex}\"","class":"lineCov","hits":"1","order":"242","possible_hits":"1",},
{"lineNum":"   77","line":"  end"},
{"lineNum":"   78","line":"end"},
]};
var percent_low = 25;var percent_high = 75;
var header = { "command" : "run_coverage", "date" : "2022-04-06 16:56:27", "instrumented" : 6, "covered" : 6,};
var merged_data = [];
