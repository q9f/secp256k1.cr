var data = {lines:[
{"lineNum":"    1","line":"# Copyright 2019-2022 Afr Schoe @q9f"},
{"lineNum":"    2","line":"#"},
{"lineNum":"    3","line":"# Licensed under the Apache License, Version 2.0 (the \"License\");"},
{"lineNum":"    4","line":"# you may not use this file except in compliance with the License."},
{"lineNum":"    5","line":"# You may obtain a copy of the License at"},
{"lineNum":"    6","line":"#"},
{"lineNum":"    7","line":"#     http://www.apache.org/licenses/LICENSE-2.0"},
{"lineNum":"    8","line":"#"},
{"lineNum":"    9","line":"# Unless required by applicable law or agreed to in writing, software"},
{"lineNum":"   10","line":"# distributed under the License is distributed on an \"AS IS\" BASIS,"},
{"lineNum":"   11","line":"# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."},
{"lineNum":"   12","line":"# See the License for the specific language governing permissions and"},
{"lineNum":"   13","line":"# limitations under the License."},
{"lineNum":"   14","line":""},
{"lineNum":"   15","line":"module Secp256k1::Curve"},
{"lineNum":"   16","line":"  extend self"},
{"lineNum":"   17","line":""},
{"lineNum":"   18","line":"  def sign(hash : Num)"},
{"lineNum":"   19","line":"  end"},
{"lineNum":"   20","line":""},
{"lineNum":"   21","line":"  def mod_inv(a : Num | BigInt, prime = P)","class":"lineCov","hits":"8","order":"55","possible_hits":"8",},
{"lineNum":"   22","line":"    a = a.to_big if a.is_a? Num","class":"lineCov","hits":"1","order":"56","possible_hits":"1",},
{"lineNum":"   23","line":"    prime = prime.to_big if prime.is_a? Num","class":"lineCov","hits":"2","order":"57","possible_hits":"2",},
{"lineNum":"   24","line":"    m_low = 1","class":"lineCov","hits":"2","order":"58","possible_hits":"2",},
{"lineNum":"   25","line":"    m_high = 0","class":"lineCov","hits":"2","order":"59","possible_hits":"2",},
{"lineNum":"   26","line":"    v_low = a % prime","class":"lineCov","hits":"2","order":"60","possible_hits":"2",},
{"lineNum":"   27","line":"    v_high = prime","class":"lineCov","hits":"2","order":"61","possible_hits":"2",},
{"lineNum":"   28","line":"    while v_low > 1","class":"lineCov","hits":"2","order":"62","possible_hits":"2",},
{"lineNum":"   29","line":"      v_ratio = v_high // v_low","class":"lineCov","hits":"4","order":"63","possible_hits":"4",},
{"lineNum":"   30","line":"      m_low_r = m_low * v_ratio","class":"lineCov","hits":"4","order":"64","possible_hits":"4",},
{"lineNum":"   31","line":"      v_low_r = v_low * v_ratio","class":"lineCov","hits":"4","order":"65","possible_hits":"4",},
{"lineNum":"   32","line":"      m = m_high - m_low_r","class":"lineCov","hits":"4","order":"66","possible_hits":"4",},
{"lineNum":"   33","line":"      v = v_high - v_low_r","class":"lineCov","hits":"2","order":"67","possible_hits":"2",},
{"lineNum":"   34","line":"      m_high = m_low","class":"lineCov","hits":"2","order":"68","possible_hits":"2",},
{"lineNum":"   35","line":"      v_high = v_low","class":"lineCov","hits":"2","order":"69","possible_hits":"2",},
{"lineNum":"   36","line":"      m_low = m","class":"lineCov","hits":"2","order":"70","possible_hits":"2",},
{"lineNum":"   37","line":"      v_low = v","class":"lineCov","hits":"6","order":"71","possible_hits":"6",},
{"lineNum":"   38","line":"    end"},
{"lineNum":"   39","line":"    Num.new m_low % prime","class":"lineCov","hits":"2","order":"72","possible_hits":"2",},
{"lineNum":"   40","line":"  end"},
{"lineNum":"   41","line":""},
{"lineNum":"   42","line":"  def add(p : Point, q : Point, prime = P)","class":"lineCov","hits":"4","order":"80","possible_hits":"4",},
{"lineNum":"   43","line":"    prime = prime.to_big if prime.is_a? Num","class":"lineCov","hits":"1","order":"81","possible_hits":"1",},
{"lineNum":"   44","line":"    p_x = p.x.to_big","class":"lineCov","hits":"1","order":"82","possible_hits":"1",},
{"lineNum":"   45","line":"    p_y = p.y.to_big","class":"lineCov","hits":"1","order":"83","possible_hits":"1",},
{"lineNum":"   46","line":"    q_x = q.x.to_big","class":"lineCov","hits":"1","order":"84","possible_hits":"1",},
{"lineNum":"   47","line":"    q_y = q.y.to_big","class":"lineCov","hits":"1","order":"85","possible_hits":"1",},
{"lineNum":"   48","line":"    x_delta = q_x - p_x","class":"lineCov","hits":"1","order":"86","possible_hits":"1",},
{"lineNum":"   49","line":"    x_inv = mod_inv x_delta","class":"lineCov","hits":"1","order":"87","possible_hits":"1",},
{"lineNum":"   50","line":"    y_delta = q_y - p_y","class":"lineCov","hits":"1","order":"88","possible_hits":"1",},
{"lineNum":"   51","line":"    m = (y_delta * x_inv.to_big) % prime","class":"lineCov","hits":"1","order":"89","possible_hits":"1",},
{"lineNum":"   52","line":"    x = (m * m - p_x - q_x) % prime","class":"lineCov","hits":"1","order":"90","possible_hits":"1",},
{"lineNum":"   53","line":"    y = (m * (p_x - x) - p_y) % prime","class":"lineCov","hits":"1","order":"91","possible_hits":"1",},
{"lineNum":"   54","line":"    x = Num.new x","class":"lineCov","hits":"1","order":"92","possible_hits":"1",},
{"lineNum":"   55","line":"    y = Num.new y","class":"lineCov","hits":"1","order":"93","possible_hits":"1",},
{"lineNum":"   56","line":"    Point.new x, y","class":"lineCov","hits":"1","order":"94","possible_hits":"1",},
{"lineNum":"   57","line":"  end"},
{"lineNum":"   58","line":""},
{"lineNum":"   59","line":"  def double(p : Point, prime = P)","class":"lineCov","hits":"4","order":"42","possible_hits":"4",},
{"lineNum":"   60","line":"    prime = prime.to_big if prime.is_a? Num","class":"lineCov","hits":"1","order":"43","possible_hits":"1",},
{"lineNum":"   61","line":"    p_x = p.x.to_big","class":"lineCov","hits":"1","order":"44","possible_hits":"1",},
{"lineNum":"   62","line":"    p_y = p.y.to_big","class":"lineCov","hits":"1","order":"45","possible_hits":"1",},
{"lineNum":"   63","line":"    lam_numer = 3 * p_x * p_x","class":"lineCov","hits":"1","order":"46","possible_hits":"1",},
{"lineNum":"   64","line":"    lam_denom = 2 * p_y","class":"lineCov","hits":"1","order":"47","possible_hits":"1",},
{"lineNum":"   65","line":"    lam_inv = mod_inv Num.new lam_denom","class":"lineCov","hits":"1","order":"48","possible_hits":"1",},
{"lineNum":"   66","line":"    lam = (lam_numer * lam_inv.to_big) % prime","class":"lineCov","hits":"1","order":"73","possible_hits":"1",},
{"lineNum":"   67","line":"    x = (lam * lam - 2 * p_x) % prime","class":"lineCov","hits":"1","order":"74","possible_hits":"1",},
{"lineNum":"   68","line":"    y = (lam * (p_x - x) - p_y) % prime","class":"lineCov","hits":"1","order":"75","possible_hits":"1",},
{"lineNum":"   69","line":"    x = Num.new x","class":"lineCov","hits":"1","order":"76","possible_hits":"1",},
{"lineNum":"   70","line":"    y = Num.new y","class":"lineCov","hits":"1","order":"77","possible_hits":"1",},
{"lineNum":"   71","line":"    Point.new x, y","class":"lineCov","hits":"1","order":"78","possible_hits":"1",},
{"lineNum":"   72","line":"  end"},
{"lineNum":"   73","line":""},
{"lineNum":"   74","line":"  def mul(p : Point, s : Num | BigInt)","class":"lineCov","hits":"4","order":"35","possible_hits":"4",},
{"lineNum":"   75","line":"    s = s.to_big if s.is_a? Num","class":"lineCov","hits":"1","order":"134","possible_hits":"1",},
{"lineNum":"   76","line":"    if s === 0 || s >= N.to_big","class":"linePartCov","hits":"3","order":"36","possible_hits":"4",},
{"lineNum":"   77","line":"      raise \"Invalid scalar: outside of Secp256k1 field dimension.\"","class":"linePartCov","hits":"1","order":"203","possible_hits":"2",},
{"lineNum":"   78","line":"    end"},
{"lineNum":"   79","line":"    s_bin = s.to_s 2","class":"lineCov","hits":"2","order":"37","possible_hits":"2",},
{"lineNum":"   80","line":"    q = p","class":"lineCov","hits":"2","order":"38","possible_hits":"2",},
{"lineNum":"   81","line":"    s_bin.each_char_with_index do |char, index|"},
{"lineNum":"   82","line":"      next if index === 0","class":"linePartCov","hits":"2","order":"39","possible_hits":"6",},
{"lineNum":"   83","line":"      q = double q","class":"linePartCov","hits":"2","order":"41","possible_hits":"4",},
{"lineNum":"   84","line":"      if char === \'1\'","class":"linePartCov","hits":"4","order":"79","possible_hits":"8",},
{"lineNum":"   85","line":"        q = add q, p","class":"linePartCov","hits":"4","order":"40","possible_hits":"8",},
{"lineNum":"   86","line":"      end"},
{"lineNum":"   87","line":"    end"},
{"lineNum":"   88","line":"    q"},
{"lineNum":"   89","line":"  end"},
{"lineNum":"   90","line":"end"},
]};
var percent_low = 25;var percent_high = 75;
var header = { "command" : "run_coverage", "date" : "2022-04-05 14:23:53", "instrumented" : 56, "covered" : 56,};
var merged_data = [];
