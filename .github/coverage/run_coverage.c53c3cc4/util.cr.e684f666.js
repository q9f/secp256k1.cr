var data = {lines:[
{"lineNum":"    1","line":"# Copyright 2019-2022 Afr Schoe @q9f"},
{"lineNum":"    2","line":"#"},
{"lineNum":"    3","line":"# Licensed under the Apache License, Version 2.0 (the \"License\");"},
{"lineNum":"    4","line":"# you may not use this file except in compliance with the License."},
{"lineNum":"    5","line":"# You may obtain a copy of the License at"},
{"lineNum":"    6","line":"#"},
{"lineNum":"    7","line":"#     http://www.apache.org/licenses/LICENSE-2.0"},
{"lineNum":"    8","line":"#"},
{"lineNum":"    9","line":"# Unless required by applicable law or agreed to in writing, software"},
{"lineNum":"   10","line":"# distributed under the License is distributed on an \"AS IS\" BASIS,"},
{"lineNum":"   11","line":"# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."},
{"lineNum":"   12","line":"# See the License for the specific language governing permissions and"},
{"lineNum":"   13","line":"# limitations under the License."},
{"lineNum":"   14","line":""},
{"lineNum":"   15","line":"module Secp256k1::Util"},
{"lineNum":"   16","line":"  extend self"},
{"lineNum":"   17","line":""},
{"lineNum":"   18","line":"  def keccak(data : Num | String, entropy = 256)","class":"lineCov","hits":"6","order":"160","possible_hits":"6",},
{"lineNum":"   19","line":"    keccak = Digest::Keccak3.new entropy","class":"lineCov","hits":"2","order":"161","possible_hits":"2",},
{"lineNum":"   20","line":"    if data.is_a? String"},
{"lineNum":"   21","line":"      return Num.new keccak.update(data).hexdigest","class":"lineCov","hits":"1","order":"162","possible_hits":"1",},
{"lineNum":"   22","line":"    else"},
{"lineNum":"   23","line":"      return Num.new keccak.update(data.to_bytes).hexdigest","class":"lineCov","hits":"1","order":"226","possible_hits":"1",},
{"lineNum":"   24","line":"    end"},
{"lineNum":"   25","line":"  end"},
{"lineNum":"   26","line":""},
{"lineNum":"   27","line":"  def sha3(data : Num | String, entropy = 256)","class":"lineCov","hits":"6","order":"227","possible_hits":"6",},
{"lineNum":"   28","line":"    sha3 = Digest::SHA3.new entropy","class":"lineCov","hits":"2","order":"228","possible_hits":"2",},
{"lineNum":"   29","line":"    if data.is_a? String"},
{"lineNum":"   30","line":"      return Num.new sha3.update(data).hexdigest","class":"lineCov","hits":"1","order":"229","possible_hits":"1",},
{"lineNum":"   31","line":"    else"},
{"lineNum":"   32","line":"      return Num.new sha3.update(data.to_bytes).hexdigest","class":"lineCov","hits":"1","order":"230","possible_hits":"1",},
{"lineNum":"   33","line":"    end"},
{"lineNum":"   34","line":"  end"},
{"lineNum":"   35","line":""},
{"lineNum":"   36","line":"  def sha256(data : Num | String)","class":"lineCov","hits":"2","order":"97","possible_hits":"2",},
{"lineNum":"   37","line":"    sha2 = OpenSSL::Digest.new \"SHA256\"","class":"lineCov","hits":"2","order":"98","possible_hits":"2",},
{"lineNum":"   38","line":"    if data.is_a? String"},
{"lineNum":"   39","line":"      return Num.new sha2.update(data).final.hexstring","class":"lineCov","hits":"1","order":"99","possible_hits":"1",},
{"lineNum":"   40","line":"    else"},
{"lineNum":"   41","line":"      return Num.new sha2.update(data.to_bytes).final.hexstring","class":"lineCov","hits":"1","order":"231","possible_hits":"1",},
{"lineNum":"   42","line":"    end"},
{"lineNum":"   43","line":"  end"},
{"lineNum":"   44","line":""},
{"lineNum":"   45","line":"  def ripemd160(data : Num | String)","class":"lineCov","hits":"2","order":"232","possible_hits":"2",},
{"lineNum":"   46","line":"    ripemd = OpenSSL::Digest.new \"RIPEMD160\"","class":"lineCov","hits":"2","order":"233","possible_hits":"2",},
{"lineNum":"   47","line":"    if data.is_a? String"},
{"lineNum":"   48","line":"      return Num.new ripemd.update(data).final.hexstring","class":"lineCov","hits":"1","order":"235","possible_hits":"1",},
{"lineNum":"   49","line":"    else"},
{"lineNum":"   50","line":"      return Num.new ripemd.update(data.to_bytes).final.hexstring","class":"lineCov","hits":"1","order":"234","possible_hits":"1",},
{"lineNum":"   51","line":"    end"},
{"lineNum":"   52","line":"  end"},
{"lineNum":"   53","line":""},
{"lineNum":"   54","line":"  def concat_bytes(x : Bytes, y : Bytes)","class":"lineCov","hits":"2","order":"111","possible_hits":"2",},
{"lineNum":"   55","line":"    z = IO::Memory.new x.bytesize + y.bytesize","class":"lineCov","hits":"1","order":"112","possible_hits":"1",},
{"lineNum":"   56","line":"    x.each do |b|"},
{"lineNum":"   57","line":"      z.write_bytes UInt8.new b","class":"lineCov","hits":"1","order":"113","possible_hits":"1",},
{"lineNum":"   58","line":"    end"},
{"lineNum":"   59","line":"    y.each do |b|"},
{"lineNum":"   60","line":"      z.write_bytes UInt8.new b","class":"lineCov","hits":"1","order":"114","possible_hits":"1",},
{"lineNum":"   61","line":"    end"},
{"lineNum":"   62","line":"    return z.to_slice","class":"lineCov","hits":"1","order":"115","possible_hits":"1",},
{"lineNum":"   63","line":"  end"},
{"lineNum":"   64","line":"end"},
]};
var percent_low = 25;var percent_high = 75;
var header = { "command" : "run_coverage", "date" : "2022-04-05 14:23:53", "instrumented" : 21, "covered" : 21,};
var merged_data = [];
